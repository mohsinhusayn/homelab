# Make changes as per your requirements

services:

  kuma:
    image: louislam/uptime-kuma:latest
    container_name: kuma
    hostname: kuma
    restart: unless-stopped
    ports:
      - "${KUMA_PORT}:${KUMA_PORT}"
    environment:
      - TZ=${TZ}
    volumes:
      - ${STACK_DIR}/kuma/data:/app/data
      - ${STACK_DIR}/kuma/logs:/app/logs
    networks:
      - monitor
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${KUMA_PORT}"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    ports:
      - "${GRAFANA_PORT}:${GRAFANA_PORT}"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_ADMIN_PASS}
      - TZ=${TZ}
    volumes:
      - ${STACK_DIR}/grafana/data:/var/lib/grafana
      - ${STACK_DIR}/grafana/logs:/var/log/grafana
    networks:
      - monitor
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${GRAFANA_PORT}/login"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    hostname: prometheus
    restart: unless-stopped
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"
    volumes:
      - ${STACK_DIR}/prometheus/config:/etc/prometheus
      - ${STACK_DIR}/prometheus/logs:/prometheus/logs
    networks:
      - monitor
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PROMETHEUS_PORT}/-/ready"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    hostname: node-exporter
    restart: unless-stopped
    ports:
      - "${NODE_EXPORTER_PORT}:${NODE_EXPORTER_PORT}"
    networks:
      - monitor
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${NODE_EXPORTER_PORT}/metrics"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    restart: unless-stopped
    ports:
      - "${CADVISOR_PORT}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - ${STACK_DIR}/cadvisor/logs:/var/log/cadvisor
    networks:
      - monitor
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/containers/"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s
    

networks:
  monitor:
    name: monitor
    driver: bridge