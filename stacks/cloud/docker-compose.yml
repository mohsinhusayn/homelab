# Make changes as per your requirements

services:

  # ----------- Nextcloud Stack -----------
  
  nextcloud:
    image: nextcloud:31.0.7-apache
    container_name: nextcloud-app
    restart: unless-stopped
    ports:
      - "${NEXTCLOUD_HTTP_PORT}:80"
      - "${NEXTCLOUD_HTTPS_PORT}:443"
    volumes:
      - "${NEXTCLOUD_DATA}:/var/www/html/data"
      - "${NEXTCLOUD_CONFIG}:/var/www/html/config"
      - "${NEXTCLOUD_APPS}:/var/www/html/custom_apps"
      - "${NEXTCLOUD_LOGS}:/var/www/html/logs"
    environment:
      MYSQL_PASSWORD: "${NEXTCLOUD_DB_PASSWORD}"
      MYSQL_DATABASE: "${NEXTCLOUD_DB_NAME}"
      MYSQL_USER: "${NEXTCLOUD_DB_USER}"
      MYSQL_HOST: db
      TZ: "${TZ}"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - cloud
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${NEXTCLOUD_HTTP_PORT}"]
      interval: 2m
      timeout: 10s
      retries: 3

  db:
    image: mariadb:11.4
    container_name: nextcloud-db
    restart: unless-stopped
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - "${NEXTCLOUD_DB_PATH}:/var/lib/mysql"
      - "${NEXTCLOUD_LOGS}:/var/log/mysql"
    environment:
      MYSQL_ROOT_PASSWORD: "${NEXTCLOUD_DB_ROOT_PASSWORD}"
      MYSQL_PASSWORD: "${NEXTCLOUD_DB_PASSWORD}"
      MYSQL_DATABASE: "${NEXTCLOUD_DB_NAME}"
      MYSQL_USER: "${NEXTCLOUD_DB_USER}"
      TZ: "${TZ}"
    networks:
      - cloud
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ----------- Immich Stack -----------

  immich-server:
    image: ghcr.io/immich-app/immich-server:release
    container_name: immich-server
    hostname: immich-server
    restart: unless-stopped
    ports:
      - "${IMMICH_SERVER_PORT}:${IMMICH_SERVER_PORT}"
    volumes:
      - "${IMMICH_LIBRARY}:/usr/src/app/upload"
      - "${IMMICH_LOGS}:/usr/src/app/logs"
    environment:
      DB_URL: "postgres://${IMMICH_DB_USER}:${IMMICH_DB_PASSWORD}@immich-postgres:${IMMICH_DB_PORT}/${IMMICH_DB_NAME}"
      REDIS_HOSTNAME: immich-redis
      IMMICH_SERVER_HOST: 0.0.0.0
      IMMICH_SERVER_PORT: "${IMMICH_SERVER_PORT}"
      TZ: "${TZ}"
    depends_on:
      immich-postgres:
        condition: service_healthy
      immich-redis:
        condition: service_healthy
    networks:
      - cloud
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${IMMICH_SERVER_PORT}"]
      interval: 2m
      timeout: 10s
      retries: 3

  immich-redis:
    image: redis:7
    container_name: immich-redis
    hostname: immich-redis
    restart: unless-stopped
    volumes:
      - "${IMMICH_LOGS}:/data/logs"
    environment:
      TZ: "${TZ}"
    networks:
      - cloud
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

  immich-postgres:
    image: ghcr.io/immich-app/postgres:14-vectorchord0.4.3-pgvectors0.2.0
    container_name: immich-postgres
    hostname: immich-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: "${IMMICH_DB_PASSWORD}"
      POSTGRES_USER: "${IMMICH_DB_USER}"
      POSTGRES_DB: "${IMMICH_DB_NAME}"
      TZ: "${TZ}"
    volumes:
      - "${IMMICH_DB_PATH}:/var/lib/postgresql/data"
      - "${IMMICH_LOGS}:/var/log/postgresql"
    networks:
      - cloud
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${IMMICH_DB_USER}"]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  cloud:
    name: cloud
    driver: bridge